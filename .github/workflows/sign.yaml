name: sign_image

on:
  workflow_call:
    inputs:
      image_digest:
        description: 'Fully-qualified image digest to verify (registry/image@sha256:digest)'
        required: true
        type: string
      registry:
        description: 'Image registry (e.g. gcr.io)'
        type: string
        required: false
        default: 'ghcr.io'
      cosign_version:
        description: 'The version of cosign to use'
        required: false
        type: string
        default: 'v1.13.1'
      scan_severity:
        description: 'Error on vulnerability scan severity'
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'

permissions:
  contents: read

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
    steps:

    - name: Auth Docker
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Scan Image
      uses: aquasecurity/trivy-action@062f2592684a31eb3aa050cc61e7ca1451cecd3d  # 0.18.0
      with:
        scan-type: image
        security-checks: vuln
        severity: ${{ inputs.scan_severity }}
        image-ref: ${{ inputs.image_digest }}
        format: sarif
        output: trivy-results.sarif
        hide-progress: true
        timeout: "10m"
        exit-code: "1"
      env:
        TRIVY_USERNAME: ${{ github.actor }}
        TRIVY_PASSWORD: ${{ github.token }}

  sign:
    needs:
    - scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
      packages: write
    steps:

    - name: Auth Docker
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@871cdc754496eb3792209f6e81422fac01b793b4  # v3.0.1
      with:
        cosign-release: ${{ inputs.cosign_version }}

    - name: Auth Cosign
      run: |
        set -euo pipefail
        cosign version
        echo "${{ github.token }}" | cosign login ${{ inputs.registry }} --username "${{ github.actor }}" --password-stdin

    - name: Generate Keys
      run: |
        set -euo pipefail
        COSIGN_PASSWORD=$(openssl rand -base64 12)
        cosign generate-key-pair

    - name: Attest Image
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: |
        set -euo pipefail
        cosign sign ${{ inputs.image_digest }} \
            --force \
            --key cosign.key \
            -a sha=${{ github.sha }} \
            -a run_id=${{ github.run_id }} \
            -a run_attempt=${{ github.run_attempt }} \
            -a tag=${{ env.GITHUB_REF_NAME }}

    - name: Attest Image
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: |
        set -euo pipefail
        cosign verify --key cosign.pub ${{ inputs.image_digest }}
